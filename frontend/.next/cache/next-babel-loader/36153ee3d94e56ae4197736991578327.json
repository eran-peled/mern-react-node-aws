{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../../helpers/alerts';\nimport { API } from '../../../../config';\nimport Router, { withRouter } from 'next/router';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../../../../components/Layout';\n\nconst ResetPassword = ({\n  router\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    buttonText: 'Reset Password',\n    success: '',\n    error: ''\n  });\n  const {\n    name,\n    token,\n    newPassword,\n    buttonText,\n    success,\n    error\n  } = state;\n  useEffect(() => {\n    console.log(router);\n    const decoded = jwt.decode(router.query.id);\n    if (decoded) setState(_objectSpread(_objectSpread({}, state), {}, {\n      name: decoded.name,\n      token: router.query.id\n    }));\n  }, [router]);\n\n  const handleChange = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      newPassword: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // console.log('post email to ', email);\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: 'Sending'\n    }));\n\n    try {\n      const response = await axios.put(`${API}/reset-password`, {\n        resetPasswordLink: token,\n        newPassword\n      }); // console.log('FORGOT PASSWORD', response);\n\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        newPassword: '',\n        buttonText: 'Done',\n        success: response.data.message\n      }));\n    } catch (error) {\n      console.log('RESET PW ERROR', error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: 'Forgot Password',\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const passwordResetForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    onChange: handleChange,\n    value: newPassword,\n    placeholder: \"Type new password\",\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\"\n  }, buttonText)));\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\"\n  }, __jsx(\"h1\", null, \"Hi \", name, \", Ready to Reset Password?\"), __jsx(\"br\", null), success && showSuccessMessage(success), error && showErrorMessage(error), passwordResetForm())));\n};\n\nexport default withRouter(ResetPassword);","map":null,"metadata":{},"sourceType":"module"}
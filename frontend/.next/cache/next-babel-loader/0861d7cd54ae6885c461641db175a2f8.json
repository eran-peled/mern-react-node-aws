{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\mern-react-node-aws\\\\frontend\\\\pages\\\\register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport Layout from '../components/Layout';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\n\nvar Register = function Register() {\n  _s();\n\n  var _useState = useState({\n    name: 'Ryan',\n    email: 'ryan@gmail.com',\n    password: 'rrrrrr',\n    error: '',\n    success: '',\n    buttonText: 'Register'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText;\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Register'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Registering'\n              }));\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"http://localhost:8000/api/register\", {\n                name: name,\n                email: email,\n                password: password\n              });\n\n            case 5:\n              response = _context.sent;\n              console.log(response);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                name: '',\n                email: '',\n                password: '',\n                buttonText: 'Submitted',\n                success: response.data.message\n              }));\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Register',\n                error: _context.t0.response.data.error\n              }));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // const handleSubmit = e => {\n  //     e.preventDefault();\n  //     setState({ ...state, buttonText: 'Registering' });\n  //     // console.table({ name, email, password });\n  //     axios\n  //         .post(`http://localhost:8000/api/register`, {\n  //             name,\n  //             email,\n  //             password\n  //         })\n  //         .then(response => {\n  //             console.log(response);\n  //             setState({\n  //                 ...state,\n  //                 name: '',\n  //                 email: '',\n  //                 password: '',\n  //                 buttonText: 'Submitted',\n  //                 success: response.data.message\n  //             });\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n  //         });\n  // };\n\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type your name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Type your password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Register\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), registerForm()));\n};\n\n_s(Register, \"pwS7noa9BQ/SyDpuT0Yl3OWNK9s=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Projects/mern-react-node-aws/frontend/pages/register.jsx"],"names":["useState","Layout","axios","showSuccessMessage","showErrorMessage","Register","name","email","password","error","success","buttonText","state","setState","handleChange","e","target","value","handleSubmit","preventDefault","post","response","console","log","data","message","registerForm"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport axios from 'axios';\r\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\r\n\r\nconst Register = () => {\r\n    const [state, setState] = useState({\r\n        name: 'Ryan',\r\n        email: 'ryan@gmail.com',\r\n        password: 'rrrrrr',\r\n        error: '',\r\n        success: '',\r\n        buttonText: 'Register'\r\n    });\r\n\r\n    const { name, email, password, error, success, buttonText } = state;\r\n\r\n    const handleChange = name => e => {\r\n        setState({ ...state, [name]: e.target.value, error: '', success: '', buttonText: 'Register' });\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setState({ ...state, buttonText: 'Registering' });\r\n        try {\r\n            const response = await axios.post(`http://localhost:8000/api/register`, {\r\n                name,\r\n                email,\r\n                password\r\n            });\r\n            console.log(response);\r\n            setState({\r\n                ...state,\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                buttonText: 'Submitted',\r\n                success: response.data.message\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            setState({ ...state, buttonText: 'Register', error: error.response.data.error });\r\n        }\r\n    };\r\n\r\n    // const handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     setState({ ...state, buttonText: 'Registering' });\r\n    //     // console.table({ name, email, password });\r\n    //     axios\r\n    //         .post(`http://localhost:8000/api/register`, {\r\n    //             name,\r\n    //             email,\r\n    //             password\r\n    //         })\r\n    //         .then(response => {\r\n    //             console.log(response);\r\n    //             setState({\r\n    //                 ...state,\r\n    //                 name: '',\r\n    //                 email: '',\r\n    //                 password: '',\r\n    //                 buttonText: 'Submitted',\r\n    //                 success: response.data.message\r\n    //             });\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\r\n    //         });\r\n    // };\r\n\r\n    const registerForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    value={name}\r\n                    onChange={handleChange('name')}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type your name\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    value={email}\r\n                    onChange={handleChange('email')}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type your email\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    value={password}\r\n                    onChange={handleChange('password')}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type your password\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <h1>Register</h1>\r\n                <br />\r\n                {success && showSuccessMessage(success)}\r\n                {error && showErrorMessage(error)}\r\n                {registerForm()}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}
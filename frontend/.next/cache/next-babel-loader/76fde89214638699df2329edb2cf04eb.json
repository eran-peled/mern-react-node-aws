{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, Fragment } from 'react';\nimport Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport axios from 'axios';\nimport renderHTML from 'react-render-html';\nimport moment from 'moment';\nimport { API, APP_NAME } from '../../config';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nconst Links = ({\n  query,\n  category,\n  links,\n  totalLinks,\n  linksLimit,\n  linkSkip\n}) => {\n  const {\n    0: allLinks,\n    1: setAllLinks\n  } = useState(links);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(linksLimit);\n  const {\n    0: skip,\n    1: setSkip\n  } = useState(0);\n  const {\n    0: size,\n    1: setSize\n  } = useState(totalLinks);\n  const {\n    0: popular,\n    1: setPopular\n  } = useState([]);\n\n  const stripHTML = data => data.replace(/<\\/?[^>]+(>|$)/g, '');\n\n  const head = () => __jsx(Head, null, __jsx(\"title\", null, category.name, \" | \", APP_NAME), __jsx(\"meta\", {\n    name: \"description\",\n    content: stripHTML(category.content.substring(0, 160))\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: category.name\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: stripHTML(category.content.substring(0, 160))\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: category.image.url\n  }), __jsx(\"meta\", {\n    property: \"og:image:secure_url\",\n    content: category.image.url\n  }));\n\n  useEffect(() => {\n    loadPopular();\n  }, []);\n\n  const loadPopular = async () => {\n    const response = await axios.get(`${API}/link/popular/${category.slug}`); // console.log(response);\n\n    setPopular(response.data);\n  };\n\n  const handleClick = async linkId => {\n    const response = await axios.put(`${API}/click-count`, {\n      linkId\n    });\n    loadPopular();\n  };\n\n  const loadUpdatedLinks = async () => {\n    const response = await axios.post(`${API}/category/${query.slug}`);\n    setAllLinks(response.data.links);\n  };\n\n  const listOfPopularLinks = () => popular.map((l, i) => __jsx(\"div\", {\n    key: i,\n    className: \"row alert alert-secondary p-2\"\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    onClick: () => handleClick(l._id)\n  }, __jsx(\"a\", {\n    href: l.url,\n    target: \"_blank\"\n  }, __jsx(\"h5\", {\n    className: \"pt-2\"\n  }, l.title), __jsx(\"h6\", {\n    className: \"pt-2 text-danger\",\n    style: {\n      fontSize: '12px'\n    }\n  }, l.url))), __jsx(\"div\", {\n    className: \"col-md-4 pt-2\"\n  }, __jsx(\"span\", {\n    className: \"pull-right\"\n  }, moment(l.createdAt).fromNow(), \" by \", l.postedBy.name)), __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, __jsx(\"span\", {\n    className: \"badge text-dark\"\n  }, l.type, \" \", l.medium), l.categories.map((c, i) => __jsx(\"span\", {\n    key: i,\n    className: \"badge text-success\"\n  }, c.name)), __jsx(\"span\", {\n    className: \"badge text-secondary pull-right\"\n  }, l.clicks, \" clicks\"))));\n\n  const listOfLinks = () => allLinks.map((l, i) => __jsx(\"div\", {\n    key: i,\n    className: \"row alert alert-primary p-2\"\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    onClick: e => handleClick(l._id)\n  }, __jsx(\"a\", {\n    href: l.url,\n    target: \"_blank\"\n  }, __jsx(\"h5\", {\n    className: \"pt-2\"\n  }, l.title), __jsx(\"h6\", {\n    className: \"pt-2 text-danger\",\n    style: {\n      fontSize: '12px'\n    }\n  }, l.url))), __jsx(\"div\", {\n    className: \"col-md-4 pt-2\"\n  }, __jsx(\"span\", {\n    className: \"pull-right\"\n  }, moment(l.createdAt).fromNow(), \" by \", l.postedBy.name), __jsx(\"br\", null), __jsx(\"span\", {\n    className: \"badge text-secondary pull-right\"\n  }, l.clicks, \" clicks\")), __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, __jsx(\"span\", {\n    className: \"badge text-dark\"\n  }, l.type, \" / \", l.medium), l.categories.map((c, i) => __jsx(\"span\", {\n    key: i,\n    className: \"badge text-success\"\n  }, c.name)))));\n\n  const loadMore = async () => {\n    let toSkip = skip + limit;\n    const response = await axios.post(`${API}/category/${query.slug}`, {\n      skip: toSkip,\n      limit\n    });\n    setAllLinks([...allLinks, ...response.data.links]);\n    console.log('allLinks', allLinks);\n    console.log('response.data.links.length', response.data.links.length);\n    setSize(response.data.links.length);\n    setSkip(toSkip);\n  };\n\n  return __jsx(Fragment, null, head(), __jsx(Layout, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, __jsx(\"h1\", {\n    className: \"display-4 font-weight-bold\"\n  }, category.name, \" - URL/Links\"), __jsx(\"div\", {\n    className: \"lead alert alert-secondary pt-4\"\n  }, renderHTML(category.content || ''))), __jsx(\"div\", {\n    className: \"col-md-4\"\n  }, __jsx(\"img\", {\n    src: category.image.url,\n    alt: category.name,\n    style: {\n      width: 'auto',\n      maxHeight: '200px'\n    }\n  }))), __jsx(\"br\", null), __jsx(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: loadMore,\n    hasMore: size > 0 && size >= limit,\n    loader: __jsx(\"img\", {\n      key: 0,\n      src: \"/static/images/loading.gif\",\n      alt: \"loading\"\n    })\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, listOfLinks()), __jsx(\"div\", {\n    className: \"col-md-4\"\n  }, __jsx(\"h2\", {\n    className: \"lead\"\n  }, \"Most popular in \", category.name), __jsx(\"div\", {\n    className: \"p-3\"\n  }, listOfPopularLinks()))))));\n};\n\nLinks.getInitialProps = async ({\n  query,\n  req\n}) => {\n  let skip = 0;\n  let limit = 2;\n  const response = await axios.post(`${API}/category/${query.slug}`, {\n    skip,\n    limit\n  });\n  return {\n    query,\n    category: response.data.category,\n    links: response.data.links,\n    totalLinks: response.data.links.length,\n    linksLimit: limit,\n    linkSkip: skip\n  };\n};\n\nexport default Links;","map":null,"metadata":{},"sourceType":"module"}
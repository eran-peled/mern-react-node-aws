{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport { API } from '../../../config';\nimport { withRouter } from 'next/router';\nimport Layout from '../../../components/Layout';\n\nvar ActivateAccount = function ActivateAccount(_ref) {\n  var router = _ref.router;\n\n  var _useState = useState({\n    name: '',\n    token: '',\n    buttonText: 'Activate Account',\n    success: '',\n    error: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      token = state.token,\n      buttonText = state.buttonText,\n      success = state.success,\n      error = state.error;\n  useEffect(function () {\n    var token = router.query.id;\n\n    if (token) {\n      var _jwt$decode = jwt.decode(token),\n          _name = _jwt$decode.name;\n\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: _name,\n        token: token\n      }));\n    }\n  }, [router]);\n\n  var clickSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // console.log('activate acccount');\n\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Activating'\n              }));\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"\".concat(API, \"/register/activate\"), {\n                token: token\n              });\n\n            case 5:\n              response = _context.sent;\n              // console.log('account activate response', response)\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                name: '',\n                token: '',\n                buttonText: 'Activated',\n                success: response.data.message\n              }));\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Activate Account',\n                error: _context.t0.response.data.error\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function clickSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\"\n  }, __jsx(\"h1\", null, \"G'day \", name, \", Ready to activate your account?\"), __jsx(\"br\", null), success && showSuccessMessage(success), error && showErrorMessage(error), __jsx(\"button\", {\n    className: \"btn btn-outline-warning btn-block\",\n    onClick: clickSubmit\n  }, buttonText))));\n};\n\nexport default withRouter(ActivateAccount);","map":null,"metadata":{},"sourceType":"module"}
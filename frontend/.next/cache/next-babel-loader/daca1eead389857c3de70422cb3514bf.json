{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// imports\nimport { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport axios from 'axios';\nimport { getCookie, isAuth } from '../../../helpers/auth';\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\n\nvar Create = function Create(_ref) {\n  var token = _ref.token;\n\n  // state\n  var _useState = useState({\n    title: '',\n    url: '',\n    categories: [],\n    loadedCategories: [],\n    success: '',\n    error: '',\n    type: '',\n    medium: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var title = state.title,\n      url = state.url,\n      categories = state.categories,\n      loadedCategories = state.loadedCategories,\n      success = state.success,\n      error = state.error,\n      type = state.type,\n      medium = state.medium; // load categories when component mounts using useEffect\n\n  useEffect(function () {\n    loadCategories();\n  }, [success]);\n\n  var loadCategories = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(API, \"/categories\"));\n\n            case 2:\n              response = _context.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                loadedCategories: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCategories() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleTitleChange = function handleTitleChange(e) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      title: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  var handleURLChange = function handleURLChange(e) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      url: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault(); // console.table({ title, url, categories, type, medium });\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post(\"\".concat(API, \"/link\"), {\n                title: title,\n                url: url,\n                categories: categories,\n                type: type,\n                medium: medium\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n\n            case 4:\n              response = _context2.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                title: '',\n                url: '',\n                success: 'Link is created',\n                error: '',\n                loadedCategories: [],\n                categories: [],\n                type: '',\n                medium: ''\n              }));\n              _context2.next = 12;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log('LINK SUBMIT ERROR', _context2.t0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                error: _context2.t0.response.data.error\n              }));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleTypeClick = function handleTypeClick(e) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      type: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  var handleMediumClick = function handleMediumClick(e) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      medium: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  var showMedium = function showMedium() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"form-check ml-3\"\n    }, __jsx(\"label\", {\n      className: \"form-check-label\"\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleMediumClick,\n      checked: medium === 'video',\n      value: \"video\",\n      className: \"from-check-input\",\n      name: \"medium\"\n    }), ' ', \"Video\")), __jsx(\"div\", {\n      className: \"form-check ml-3\"\n    }, __jsx(\"label\", {\n      className: \"form-check-label\"\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleMediumClick,\n      checked: medium === 'book',\n      value: \"book\",\n      className: \"from-check-input\",\n      name: \"medium\"\n    }), ' ', \"Book\")));\n  };\n\n  var showTypes = function showTypes() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"form-check ml-3\"\n    }, __jsx(\"label\", {\n      className: \"form-check-label\"\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleTypeClick,\n      checked: type === 'free',\n      value: \"free\",\n      className: \"from-check-input\",\n      name: \"type\"\n    }), ' ', \"Free\")), __jsx(\"div\", {\n      className: \"form-check ml-3\"\n    }, __jsx(\"label\", {\n      className: \"form-check-label\"\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleTypeClick,\n      checked: type === 'paid',\n      value: \"paid\",\n      className: \"from-check-input\",\n      name: \"type\"\n    }), ' ', \"Paid\")));\n  };\n\n  var handleToggle = function handleToggle(c) {\n    return function () {\n      // return the first index or -1\n      var clickedCategory = categories.indexOf(c);\n\n      var all = _toConsumableArray(categories);\n\n      if (clickedCategory === -1) {\n        all.push(c);\n      } else {\n        all.splice(clickedCategory, 1);\n      }\n\n      console.log('all >> categories', all);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        categories: all,\n        success: '',\n        error: ''\n      }));\n    };\n  }; // show categories > checkbox\n\n\n  var showCategories = function showCategories() {\n    return loadedCategories && loadedCategories.map(function (c, i) {\n      return __jsx(\"li\", {\n        className: \"list-unstyled\",\n        key: c._id\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: handleToggle(c._id),\n        className: \"mr-2\"\n      }), __jsx(\"label\", {\n        className: \"form-check-label\"\n      }, c.name));\n    });\n  }; // link create form\n\n\n  var submitLinkForm = function submitLinkForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"Title\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleTitleChange,\n      value: title\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"URL\"), __jsx(\"input\", {\n      type: \"url\",\n      className: \"form-control\",\n      onChange: handleURLChange,\n      value: url\n    })), __jsx(\"div\", null, __jsx(\"button\", {\n      disabled: !token,\n      className: \"btn btn-outline-warning\",\n      type: \"submit\"\n    }, isAuth() || token ? 'Post' : 'Login to post')));\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-12\"\n  }, __jsx(\"h1\", null, \"Submit Link/URL\"), __jsx(\"br\", null))), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-4\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\"\n  }, \"Category\"), __jsx(\"ul\", {\n    style: {\n      maxHeight: '100px',\n      overflowY: 'scroll'\n    }\n  }, showCategories())), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\"\n  }, \"Type\"), showTypes()), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\"\n  }, \"Medium\"), showMedium())), __jsx(\"div\", {\n    className: \"col-md-8\"\n  }, success && showSuccessMessage(success), error && showErrorMessage(error), submitLinkForm())));\n};\n\nCreate.getInitialProps = function (_ref4) {\n  var req = _ref4.req;\n  var token = getCookie('token', req);\n  return {\n    token: token\n  };\n};\n\nexport default Create;","map":null,"metadata":{},"sourceType":"module"}
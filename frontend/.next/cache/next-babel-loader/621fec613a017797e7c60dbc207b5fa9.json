{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport dynamic from 'next/dynamic';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Resizer from 'react-image-file-resizer';\nvar ReactQuill = dynamic(function () {\n  return import('react-quill');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-quill')];\n    },\n    modules: ['react-quill']\n  }\n});\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport Layout from '../../../components/Layout';\nimport withAdmin from '../../withAdmin';\nimport 'react-quill/dist/quill.bubble.css';\n\nvar Create = function Create(_ref) {\n  var user = _ref.user,\n      token = _ref.token;\n\n  var _useState = useState({\n    name: '',\n    error: '',\n    success: '',\n    buttonText: 'Create',\n    image: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(''),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var _useState3 = useState('Upload image'),\n      imageUploadButtonName = _useState3[0],\n      setImageUploadButtonName = _useState3[1];\n\n  var name = state.name,\n      success = state.success,\n      error = state.error,\n      image = state.image,\n      buttonText = state.buttonText,\n      imageUploadText = state.imageUploadText;\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _objectSpread2)));\n    };\n  };\n\n  var handleContent = function handleContent(e) {\n    console.log(e);\n    setContent(e);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      success: '',\n      error: ''\n    }));\n  };\n\n  var handleImage = function handleImage(event) {\n    var fileInput = false;\n\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n\n    setImageUploadButtonName(event.target.files[0].name);\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'JPEG', 100, 0, function (uri) {\n        // console.log(uri);\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          image: uri,\n          success: '',\n          error: ''\n        }));\n      }, 'base64');\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Creating'\n              }));\n              console.table({\n                name: name,\n                content: content,\n                image: image\n              });\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.post(\"\".concat(API, \"/category\"), {\n                name: name,\n                content: content,\n                image: image\n              }, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n\n            case 6:\n              response = _context.sent;\n              console.log('CATEGORY CREATE RESPONSE', response);\n              setImageUploadButtonName('Upload image');\n              setContent('');\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                name: '',\n                formData: '',\n                buttonText: 'Created',\n                imageUploadText: 'Upload image',\n                success: \"\".concat(response.data.name, \" is created\")\n              }));\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n              console.log('CATEGORY CREATE ERROR', _context.t0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Create',\n                error: _context.t0.response.data.error\n              }));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 13]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var createCategoryForm = function createCategoryForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"Name\"), __jsx(\"input\", {\n      onChange: handleChange('name'),\n      value: name,\n      type: \"text\",\n      className: \"form-control\",\n      required: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted\"\n    }, \"Content\"), __jsx(ReactQuill, {\n      value: content,\n      onChange: handleContent,\n      placeholder: \"Write something...\",\n      theme: \"bubble\",\n      className: \"pb-5 mb-3\",\n      style: {\n        border: '1px solid #666'\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"btn btn-outline-secondary\"\n    }, imageUploadButtonName, __jsx(\"input\", {\n      onChange: handleImage,\n      type: \"file\",\n      accept: \"image/*\",\n      className: \"form-control\",\n      hidden: true\n    }))), __jsx(\"div\", null, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\"\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\"\n  }, __jsx(\"h1\", null, \"Create category\"), __jsx(\"br\", null), success && showSuccessMessage(success), error && showErrorMessage(error), createCategoryForm())));\n};\n\nexport default withAdmin(Create);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mern-react-node-aws\\\\frontend\\\\pages\\\\links\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport renderHTML from 'react-render-html';\nimport moment from 'moment';\nimport { API } from '../../config'; //import InfiniteScroll from 'react-infinite-scroller';\n\nconst Links = ({\n  query,\n  category,\n  links,\n  totalLinks,\n  linksLimit,\n  linkSkip\n}) => {\n  const {\n    0: allLinks,\n    1: setAllLinks\n  } = useState(links);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(linksLimit);\n  const {\n    0: skip,\n    1: setSkip\n  } = useState(0);\n  const {\n    0: size,\n    1: setSize\n  } = useState(totalLinks);\n\n  const handleClick = async linkId => {\n    const response = await axios.put(`${API}/click-count`, {\n      linkId\n    });\n    loadUpdatedLinks();\n  };\n\n  const loadUpdatedLinks = async () => {\n    const response = await axios.post(`${API}/category/${query.slug}`);\n    setAllLinks(response.data.links);\n  };\n\n  const listOfLinks = () => allLinks.map((l, i) => __jsx(\"div\", {\n    className: \"row alert alert-primary p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    onClick: e => handleClick(l._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: l.url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(\"h5\", {\n    className: \"pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, l.title), __jsx(\"h6\", {\n    className: \"pt-2 text-danger\",\n    style: {\n      fontSize: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, l.url))), __jsx(\"div\", {\n    className: \"col-md-4 pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, moment(l.createdAt).fromNow(), \" by \", l.postedBy.name), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    className: \"badge text-secondary pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, l.clicks, \" clicks\")), __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"badge text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, l.type, \" / \", l.medium), l.categories.map((c, i) => __jsx(\"span\", {\n    className: \"badge text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, c.name)))));\n\n  const loadMore = async () => {\n    let toSkip = skip + limit;\n    const response = await axios.post(`${API}/category/${query.slug}`, {\n      skip: toSkip,\n      limit\n    });\n    setAllLinks([...allLinks, ...response.data.links]);\n    console.log('allLinks', allLinks);\n    console.log('response.data.links.length', response.data.links.length);\n    setSize(response.data.links.length);\n    setSkip(toSkip);\n  }; // const loadMoreButton = () => {\n  //     return (\n  //         size > 0 &&\n  //         size >= limit && (\n  //             <button onClick={loadMore} className=\"btn btn-outline-primary btn-lg\">\n  //                 Load more\n  //             </button>\n  //         )\n  //     );\n  // };\n\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-4 font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, category.name, \" - URL/Links\"), __jsx(\"div\", {\n    className: \"lead alert alert-secondary pt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, renderHTML(category.content || ''))), __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: category.image.url,\n    alt: category.name,\n    style: {\n      width: 'auto',\n      maxHeight: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, listOfLinks()), __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Most popular in \", category.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"show popular links\"))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: loadMore,\n    hasMore: size > 0 && size >= limit,\n    loader: __jsx(\"img\", {\n      src: \"/static/images/loading.gif\",\n      alt: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }))));\n};\n\nLinks.getInitialProps = async ({\n  query,\n  req\n}) => {\n  let skip = 0;\n  let limit = 2;\n  const response = await axios.post(`${API}/category/${query.slug}`, {\n    skip,\n    limit\n  });\n  return {\n    query,\n    category: response.data.category,\n    links: response.data.links,\n    totalLinks: response.data.links.length,\n    linksLimit: limit,\n    linkSkip: skip\n  };\n};\n\nexport default Links;","map":{"version":3,"sources":["C:/Projects/mern-react-node-aws/frontend/pages/links/[slug].js"],"names":["useState","Layout","Link","axios","renderHTML","moment","API","Links","query","category","links","totalLinks","linksLimit","linkSkip","allLinks","setAllLinks","limit","setLimit","skip","setSkip","size","setSize","handleClick","linkId","response","put","loadUpdatedLinks","post","slug","data","listOfLinks","map","l","i","e","_id","url","title","fontSize","createdAt","fromNow","postedBy","name","clicks","type","medium","categories","c","loadMore","toSkip","console","log","length","content","image","width","maxHeight","getInitialProps","req"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport Link from 'next/link';\r\nimport axios from 'axios';\r\nimport renderHTML from 'react-render-html';\r\nimport moment from 'moment';\r\nimport { API } from '../../config';\r\n//import InfiniteScroll from 'react-infinite-scroller';\r\n\r\nconst Links = ({ query, category, links, totalLinks, linksLimit, linkSkip }) => {\r\n    const [allLinks, setAllLinks] = useState(links);\r\n    const [limit, setLimit] = useState(linksLimit);\r\n    const [skip, setSkip] = useState(0);\r\n    const [size, setSize] = useState(totalLinks);\r\n\r\n    const handleClick = async linkId => {\r\n        const response = await axios.put(`${API}/click-count`, { linkId });\r\n        loadUpdatedLinks();\r\n    };\r\n\r\n    const loadUpdatedLinks = async () => {\r\n        const response = await axios.post(`${API}/category/${query.slug}`);\r\n        setAllLinks(response.data.links);\r\n    };\r\n\r\n    const listOfLinks = () =>\r\n        allLinks.map((l, i) => (\r\n            <div className=\"row alert alert-primary p-2\">\r\n                <div className=\"col-md-8\" onClick={e => handleClick(l._id)}>\r\n                    <a href={l.url} target=\"_blank\">\r\n                        <h5 className=\"pt-2\">{l.title}</h5>\r\n                        <h6 className=\"pt-2 text-danger\" style={{ fontSize: '12px' }}>\r\n                            {l.url}\r\n                        </h6>\r\n                    </a>\r\n                </div>\r\n                <div className=\"col-md-4 pt-2\">\r\n                    <span className=\"pull-right\">\r\n                        {moment(l.createdAt).fromNow()} by {l.postedBy.name}\r\n                    </span>\r\n                    <br />\r\n                    <span className=\"badge text-secondary pull-right\">{l.clicks} clicks</span>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <span className=\"badge text-dark\">\r\n                        {l.type} / {l.medium}\r\n                    </span>\r\n                    {l.categories.map((c, i) => (\r\n                        <span className=\"badge text-success\">{c.name}</span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n    const loadMore = async () => {\r\n        let toSkip = skip + limit;\r\n        const response = await axios.post(`${API}/category/${query.slug}`, { skip: toSkip, limit });\r\n        setAllLinks([...allLinks, ...response.data.links]);\r\n        console.log('allLinks', allLinks);\r\n        console.log('response.data.links.length', response.data.links.length);\r\n        setSize(response.data.links.length);\r\n        setSkip(toSkip);\r\n    };\r\n\r\n    // const loadMoreButton = () => {\r\n    //     return (\r\n    //         size > 0 &&\r\n    //         size >= limit && (\r\n    //             <button onClick={loadMore} className=\"btn btn-outline-primary btn-lg\">\r\n    //                 Load more\r\n    //             </button>\r\n    //         )\r\n    //     );\r\n    // };\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h1 className=\"display-4 font-weight-bold\">{category.name} - URL/Links</h1>\r\n                    <div className=\"lead alert alert-secondary pt-4\">{renderHTML(category.content || '')}</div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <img src={category.image.url} alt={category.name} style={{ width: 'auto', maxHeight: '200px' }} />\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">{listOfLinks()}</div>\r\n                <div className=\"col-md-4\">\r\n                    <h2 className=\"lead\">Most popular in {category.name}</h2>\r\n                    <p>show popular links</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/*<div className=\"text-center pt-4 pb-5\">{loadMoreButton()}</div>*/}\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-center\">\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={loadMore}\r\n                        hasMore={size > 0 && size >= limit}\r\n                        loader={<img src=\"/static/images/loading.gif\" alt=\"loading\" />}\r\n                    ></InfiniteScroll>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nLinks.getInitialProps = async ({ query, req }) => {\r\n    let skip = 0;\r\n    let limit = 2;\r\n\r\n    const response = await axios.post(`${API}/category/${query.slug}`, { skip, limit });\r\n    return {\r\n        query,\r\n        category: response.data.category,\r\n        links: response.data.links,\r\n        totalLinks: response.data.links.length,\r\n        linksLimit: limit,\r\n        linkSkip: skip\r\n    };\r\n};\r\n\r\nexport default Links;\r\n"]},"metadata":{},"sourceType":"module"}
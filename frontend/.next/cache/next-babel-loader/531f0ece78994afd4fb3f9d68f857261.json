{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\mern-react-node-aws\\\\frontend\\\\pages\\\\admin\\\\category\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport dynamic from 'next/dynamic';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Resizer from 'react-image-file-resizer';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\nimport Layout from '../../../components/Layout';\nimport withAdmin from '../../withAdmin';\nimport 'react-quill/dist/quill.bubble.css';\n\nconst Update = ({\n  oldCategory,\n  token\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: oldCategory.name,\n    error: '',\n    success: '',\n    buttonText: 'Update',\n    imagePreview: oldCategory.image.url,\n    image: ''\n  });\n  const {\n    0: content,\n    1: setContent\n  } = useState(oldCategory.content);\n  const {\n    0: imageUploadButtonName,\n    1: setImageUploadButtonName\n  } = useState('Update image');\n  const {\n    name,\n    success,\n    error,\n    image,\n    buttonText,\n    imagePreview\n  } = state;\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  const handleContent = e => {\n    console.log(e);\n    setContent(e);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      success: '',\n      error: ''\n    }));\n  };\n\n  const handleImage = event => {\n    let fileInput = false;\n\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n\n    setImageUploadButtonName(event.target.files[0].name);\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'JPEG', 100, 0, uri => {\n        // console.log(uri);\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          image: uri,\n          success: '',\n          error: ''\n        }));\n      }, 'base64');\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: 'Updating'\n    }));\n    console.table({\n      name,\n      content,\n      image\n    });\n\n    try {\n      const response = await axios.put(`${API}/category/${oldCategory.slug}`, {\n        name,\n        content,\n        image\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('CATEGORY UPDATE RESPONSE', response);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        imagePreview: response.data.image.url,\n        success: `${response.data.name} is updated`\n      }));\n      setContent(response.data.content);\n    } catch (error) {\n      console.log('CATEGORY CREATE ERROR', error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: 'Create',\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const updateCategoryForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    onChange: handleChange('name'),\n    value: name,\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Content\"), __jsx(ReactQuill, {\n    value: content,\n    onChange: handleContent,\n    placeholder: \"Write something...\",\n    theme: \"bubble\",\n    className: \"pb-5 mb-3\",\n    style: {\n      border: '1px solid #666'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"btn btn-outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, imageUploadButtonName, ' ', __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: imagePreview,\n    alt: \"image\",\n    height: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })), __jsx(\"input\", {\n    onChange: handleImage,\n    type: \"file\",\n    accept: \"image/*\",\n    className: \"form-control\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Update category\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), updateCategoryForm())));\n};\n\nUpdate.getInitialProps = async ({\n  req,\n  query,\n  token\n}) => {\n  const response = await axios.post(`${API}/category/${query.slug}`);\n  return {\n    oldCategory: response.data.category,\n    token\n  };\n};\n\nexport default withAdmin(Update);","map":{"version":3,"sources":["C:/Projects/mern-react-node-aws/frontend/pages/admin/category/[slug].js"],"names":["dynamic","useState","useEffect","axios","Resizer","ReactQuill","ssr","API","showSuccessMessage","showErrorMessage","Layout","withAdmin","Update","oldCategory","token","state","setState","name","error","success","buttonText","imagePreview","image","url","content","setContent","imageUploadButtonName","setImageUploadButtonName","handleChange","e","target","value","handleContent","console","log","handleImage","event","fileInput","files","imageFileResizer","uri","handleSubmit","preventDefault","table","response","put","slug","headers","Authorization","data","updateCategoryForm","border","getInitialProps","req","query","post","category"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Resizer from 'react-image-file-resizer';\r\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\r\nimport { API } from '../../../config';\r\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\r\nimport Layout from '../../../components/Layout';\r\nimport withAdmin from '../../withAdmin';\r\nimport 'react-quill/dist/quill.bubble.css';\r\n\r\nconst Update = ({ oldCategory, token }) => {\r\n    const [state, setState] = useState({\r\n        name: oldCategory.name,\r\n        error: '',\r\n        success: '',\r\n        buttonText: 'Update',\r\n        imagePreview: oldCategory.image.url,\r\n        image: ''\r\n    });\r\n    const [content, setContent] = useState(oldCategory.content);\r\n    const [imageUploadButtonName, setImageUploadButtonName] = useState('Update image');\r\n\r\n    const { name, success, error, image, buttonText, imagePreview } = state;\r\n\r\n    const handleChange = name => e => {\r\n        setState({ ...state, [name]: e.target.value, error: '', success: '' });\r\n    };\r\n\r\n    const handleContent = e => {\r\n        console.log(e);\r\n        setContent(e);\r\n        setState({ ...state, success: '', error: '' });\r\n    };\r\n\r\n    const handleImage = event => {\r\n        let fileInput = false;\r\n        if (event.target.files[0]) {\r\n            fileInput = true;\r\n        }\r\n        setImageUploadButtonName(event.target.files[0].name);\r\n        if (fileInput) {\r\n            Resizer.imageFileResizer(\r\n                event.target.files[0],\r\n                300,\r\n                300,\r\n                'JPEG',\r\n                100,\r\n                0,\r\n                uri => {\r\n                    // console.log(uri);\r\n                    setState({ ...state, image: uri, success: '', error: '' });\r\n                },\r\n                'base64'\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setState({ ...state, buttonText: 'Updating' });\r\n        console.table({ name, content, image });\r\n        try {\r\n            const response = await axios.put(\r\n                `${API}/category/${oldCategory.slug}`,\r\n                { name, content, image },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                }\r\n            );\r\n            console.log('CATEGORY UPDATE RESPONSE', response);\r\n            setState({\r\n                ...state,\r\n                imagePreview: response.data.image.url,\r\n                success: `${response.data.name} is updated`\r\n            });\r\n            setContent(response.data.content);\r\n        } catch (error) {\r\n            console.log('CATEGORY CREATE ERROR', error);\r\n            setState({ ...state, buttonText: 'Create', error: error.response.data.error });\r\n        }\r\n    };\r\n\r\n    const updateCategoryForm = () => (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} value={name} type=\"text\" className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Content</label>\r\n                <ReactQuill\r\n                    value={content}\r\n                    onChange={handleContent}\r\n                    placeholder=\"Write something...\"\r\n                    theme=\"bubble\"\r\n                    className=\"pb-5 mb-3\"\r\n                    style={{ border: '1px solid #666' }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-outline-secondary\">\r\n                    {imageUploadButtonName}{' '}\r\n                    <span>\r\n                        <img src={imagePreview} alt=\"image\" height=\"20\" />\r\n                    </span>\r\n                    <input onChange={handleImage} type=\"file\" accept=\"image/*\" className=\"form-control\" hidden />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h1>Update category</h1>\r\n                    <br />\r\n                    {success && showSuccessMessage(success)}\r\n                    {error && showErrorMessage(error)}\r\n                    {updateCategoryForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nUpdate.getInitialProps = async ({ req, query, token }) => {\r\n    const response = await axios.post(`${API}/category/${query.slug}`);\r\n    return { oldCategory: response.data.category, token };\r\n};\r\n\r\nexport default withAdmin(Update);\r\n"]},"metadata":{},"sourceType":"module"}
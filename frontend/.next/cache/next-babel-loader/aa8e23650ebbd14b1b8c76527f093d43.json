{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nvar Register = function Register() {\n  var _useState = useState({\n    name: 'Eran',\n    email: 'eranltd@gmail.com',\n    password: '',\n    error: '',\n    success: '',\n    buttonText: 'Register',\n    loadedCategories: [],\n    categories: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText,\n      loadedCategories = state.loadedCategories,\n      categories = state.categories;\n  useEffect(function () {\n    isAuth() && Router.push('/');\n  }, []); // load categories when component mounts using useEffect\n\n  useEffect(function () {\n    loadCategories();\n  }, []);\n\n  var loadCategories = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(API, \"/categories\"));\n\n            case 2:\n              response = _context.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                loadedCategories: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCategories() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleToggle = function handleToggle(c) {\n    return function () {\n      // return the first index or -1\n      var clickedCategory = categories.indexOf(c);\n\n      var all = _toConsumableArray(categories);\n\n      if (clickedCategory === -1) {\n        all.push(c);\n      } else {\n        all.splice(clickedCategory, 1);\n      }\n\n      console.log('all >> categories', all);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        categories: all,\n        success: '',\n        error: ''\n      }));\n    };\n  }; // show categories > checkbox\n\n\n  var showCategories = function showCategories() {\n    return loadedCategories && loadedCategories.map(function (c, i) {\n      return __jsx(\"li\", {\n        className: \"list-unstyled\",\n        key: c._id\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: handleToggle(c._id),\n        className: \"mr-2\"\n      }), __jsx(\"label\", {\n        className: \"form-check-label\"\n      }, c.name));\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Register'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              console.table({\n                name: name,\n                email: email,\n                password: password,\n                categories: categories\n              });\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Registering'\n              }));\n              _context2.prev = 3;\n              _context2.next = 6;\n              return axios.post(\"\".concat(API, \"/register\"), {\n                name: name,\n                email: email,\n                password: password,\n                categories: categories\n              });\n\n            case 6:\n              response = _context2.sent;\n              console.log(response);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                name: '',\n                email: '',\n                password: '',\n                buttonText: 'Submitted',\n                success: response.data.message\n              }));\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Register',\n                error: _context2.t0.response.data.error\n              }));\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const handleSubmit = e => {\n  //     e.preventDefault();\n  //     setState({ ...state, buttonText: 'Registering' });\n  //     // console.table({ name, email, password });\n  //     axios\n  //         .post(`http://localhost:8000/api/register`, {\n  //             name,\n  //             email,\n  //             password\n  //         })\n  //         .then(response => {\n  //             console.log(response);\n  //             setState({\n  //                 ...state,\n  //                 name: '',\n  //                 email: '',\n  //                 password: '',\n  //                 buttonText: 'Submitted',\n  //                 success: response.data.message\n  //             });\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n  //         });\n  // };\n\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type your name\",\n      required: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Type your password\",\n      required: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      className: \"text-muted ml-4\"\n    }, \"Category\"), __jsx(\"ul\", {\n      style: {\n        maxHeight: '100px',\n        overflowY: 'scroll'\n      }\n    }, showCategories())), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\"\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\"\n  }, __jsx(\"h1\", null, \"Register\"), __jsx(\"br\", null), success && showSuccessMessage(success), error && showErrorMessage(error), registerForm()));\n};\n\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}
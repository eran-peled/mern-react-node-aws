{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { API } from '../config';\nimport { getCookie } from '../helpers/auth';\n\nconst withUser = Page => {\n  const WithAuthUser = props => __jsx(Page, props);\n\n  WithAuthUser.getInitialProps = async context => {\n    const token = getCookie('token', context.req);\n    let user = null;\n    let userLinks = [];\n\n    if (token) {\n      try {\n        const response = await axios.get(`${API}/user`, {\n          headers: {\n            authorization: `Bearer ${token}`,\n            contentType: 'application/json'\n          }\n        });\n        console.log('response in withUser', response);\n        user = response.data.user;\n        userLinks = response.data.links;\n      } catch (error) {\n        if (error.response.status === 401) {\n          user = null;\n        }\n      }\n    }\n\n    if (user === null) {\n      // redirect\n      context.res.writeHead(302, {\n        Location: '/'\n      });\n      context.res.end();\n    } else {\n      return _objectSpread(_objectSpread({}, Page.getInitialProps ? await Page.getInitialProps(context) : {}), {}, {\n        user,\n        token,\n        userLinks\n      });\n    }\n  };\n\n  return WithAuthUser;\n};\n\nexport default withUser;","map":null,"metadata":{},"sourceType":"module"}